name: "godot-ci export"
on:
  push:
  workflow_dispatch:

permissions:
  contents: write

env:
  GODOT_VERSION: 4.2.2
  EXPORT_NAME: fix IT up
  EXPORT_NAME_SLUG: fix-IT-up

jobs:
  export-windows:
    name: Windows Export
    runs-on: ubuntu-20.04
    container:
      image: barichello/godot-ci:4.2.2
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true
      - name: Setup
        run: |
          mkdir -v -p ~/.local/share/godot/export_templates/
          mv /root/.local/share/godot/export_templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable
      - name: Windows Build
        run: |
          mkdir -v -p build/native/windows
          godot --headless --verbose --export-release "Windows Desktop" "build/native/windows/$EXPORT_NAME.exe"
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.EXPORT_NAME_SLUG }}-windows
          path: build/native/windows

  export-linux:
    name: Linux Export
    runs-on: ubuntu-20.04
    container:
      image: barichello/godot-ci:4.2.2
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true
      - name: Setup
        run: |
          mkdir -v -p ~/.local/share/godot/export_templates/
          mv /root/.local/share/godot/export_templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable
      - name: Linux Build
        run: |
          mkdir -v -p build/native/linux
          godot --headless --verbose --export-release "Linux/X11" "build/native/linux/$EXPORT_NAME.x86_64"
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.EXPORT_NAME_SLUG }}-linux
          path: build/native/linux

  export-web:
    name: Web Export
    runs-on: ubuntu-20.04
    container:
      image: barichello/godot-ci:4.2.2
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true
      - name: Setup
        run: |
          mkdir -v -p ~/.local/share/godot/export_templates/
          mv /root/.local/share/godot/export_templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable
      - name: Web Build
        run: |
          mkdir -v -p build/web
          godot --headless --verbose --export-release "Web" build/web/index.html
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.EXPORT_NAME_SLUG }}-web
          path: build/web

  export-mac:
    name: Mac Export
    runs-on: ubuntu-20.04
    container:
      image: barichello/godot-ci:4.2.2
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true
      - name: Setup
        run: |
          mkdir -v -p ~/.local/share/godot/export_templates/
          mv /root/.local/share/godot/export_templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable
      - name: Mac Build
        run: |
          mkdir -v -p build/native/macos
          godot --headless --verbose --export-release "macOS" "build/native/macos/$EXPORT_NAME.zip"
          # Since Actions already zips things when you upload them, we explicitly unzip before uploading
          unzip "build/native/macos/$EXPORT_NAME.zip"
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.EXPORT_NAME_SLUG }}-macos
          path: build/native/macos

  release:
    name: Release
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    needs:
      - export-windows
      - export-linux
      - export-web
      - export-mac
    steps:
      - name: Download artifacts
        # ughhhhh: https://github.com/actions/download-artifact/issues/143
        # Somehow this is actually easier. Ridiculous. FFFFFFFFFFFF
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: >
          gh api '/repos/${{ github.repository }}/actions/runs/${{ github.run_id }}/artifacts' |
            jq -r '.artifacts[] | [.archive_download_url, "-o", .name + ".zip"] | @tsv' |
            xargs curl -L --header "Authorization: token ${GITHUB_TOKEN}"

      - name: Create release and upload artifacts
        uses: softprops/action-gh-release@v2
        with:
          files: '*'
          prerelease: ${{ startsWith(github.ref, 'refs/tags/v0') }}

  # TODO: https://github.com/marketplace/actions/butler-push
  # Push builds (especially web) to itch.io.
  # Web will need SharedArrayBuffer support to work properly
  # Also need to double check `Cross Origin Isolation`
